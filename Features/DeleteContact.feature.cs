// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DemoSeleniumSpecFlow.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("DeleteContact")]
    public partial class DeleteContactFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "DeleteContact.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "DeleteContact", "As a user I want to delete contact in the contact list", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Delete a valid contact")]
        [NUnit.Framework.CategoryAttribute("Delete")]
        [NUnit.Framework.CategoryAttribute("HappyPath")]
        [NUnit.Framework.CategoryAttribute("DataSource:../Data/ContactDetails.xlsx")]
        [NUnit.Framework.CategoryAttribute("DataSet:ValidContacts")]
        [NUnit.Framework.TestCaseAttribute("Jason Joseph", "Eligio", "1991-05-13", "jhay0513@gmail.com", "09163003091", "Emerald St New Hope Subd", "Bulihan", "Malolos", "Bulacan", "3000", "Philippines", null)]
        [NUnit.Framework.TestCaseAttribute("Crisa", "De Juan", "1993-10-08", "crisadejuan@gmail.com", "09166675789", "Blk 18 Lot 6 Petunia St", "Lancaster New City", "Gen Trias", "Cavite", "4107", "Philippines", null)]
        [NUnit.Framework.TestCaseAttribute("Alvin", "Guevarra", "1992-02-09", "alvsguevs@gmail.com", "09663853712", "1234 Camella St", "San Antonio Valley 17", "Las Pinas", "NCR", "1000", "Philippines", null)]
        [NUnit.Framework.TestCaseAttribute("Benjie", "Manalo", "1994-01-02", "benjiemanalo@gmail.com", "09198009091", "3rd Floor Insular Life Bldg", "Paseo De Roxas", "Makati", "NCR", "2000", "Philippines", null)]
        [NUnit.Framework.TestCaseAttribute("Catherine", "Janelle", "1995-05-06", "cjelig@gmail.com", "09887654121", "Blk 6 Lot 8 Sapphire St", "Stella Maris", "Malolos", "Bulacan", "3001", "Philippines", null)]
        [NUnit.Framework.TestCaseAttribute("Darryl", "Diaz", "1996-07-08", "thereal0708@gmail.com", "09134575123", "2180 G G Cruz St", "Baclaran", "Paranaque", "NCR", "4000", "Philippines", null)]
        [NUnit.Framework.TestCaseAttribute("Emma", "Bolgrihn", "1990-09-10", "emma.bolgrihn@gmail.com", "09122225123", "234 Rosal St", "Talon Kuatro", "Las Pinas", "NCR", "9182", "Philippines", null)]
        [NUnit.Framework.TestCaseAttribute("Fernando", "Jesus", "1989-11-12", "fpj1112@gmail.com", "09166878723", "878 Espana St", "Sampaloc", "Manila", "NCR", "4321", "Philippines", null)]
        [NUnit.Framework.TestCaseAttribute("Guzmin", "Carrow", "1988-12-11", "frankiecarrow@gmail.com", "09166663456", "13th floor One San Miguel Tower", "San Miguel Avenue, Ortigas", "Pasig City", "NCR", "7654", "Philippines", null)]
        [NUnit.Framework.TestCaseAttribute("Huerto", "Sarzaba", "1987-10-09", "huertosarzaba@gmail.com", "09193853732", "123 Kabilang-Ibayo St", "Pala-Pala", "San Jose", "Pampanga", "9876", "Philippines", null)]
        public virtual void DeleteAValidContact(string firstName, string lastName, string dateOfBirth, string email, string phone, string streetAddress1, string streetAddress2, string city, string stateOrProvince, string postalCode, string country, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Delete",
                    "HappyPath",
                    "DataSource:../Data/ContactDetails.xlsx",
                    "DataSet:ValidContacts"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("FirstName", firstName);
            argumentsOfScenario.Add("LastName", lastName);
            argumentsOfScenario.Add("DateOfBirth", dateOfBirth);
            argumentsOfScenario.Add("Email", email);
            argumentsOfScenario.Add("Phone", phone);
            argumentsOfScenario.Add("StreetAddress1", streetAddress1);
            argumentsOfScenario.Add("StreetAddress2", streetAddress2);
            argumentsOfScenario.Add("City", city);
            argumentsOfScenario.Add("StateOrProvince", stateOrProvince);
            argumentsOfScenario.Add("PostalCode", postalCode);
            argumentsOfScenario.Add("Country", country);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Delete a valid contact", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 7
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 8
 testRunner.Given("user is logged in as test30513", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
                TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                            "firstName",
                            "lastName",
                            "dateOfBirth",
                            "email",
                            "phone",
                            "streetAddress1",
                            "streetAddress2",
                            "city",
                            "stateOrProvince",
                            "postalCode",
                            "country"});
                table4.AddRow(new string[] {
                            string.Format("{0}", firstName),
                            string.Format("{0}", lastName),
                            string.Format("{0}", dateOfBirth),
                            string.Format("{0}", email),
                            string.Format("{0}", phone),
                            string.Format("{0}", streetAddress1),
                            string.Format("{0}", streetAddress2),
                            string.Format("{0}", city),
                            string.Format("{0}", stateOrProvince),
                            string.Format("{0}", postalCode),
                            string.Format("{0}", country)});
#line 9
 testRunner.And("want to delete existing contact with the following details", ((string)(null)), table4, "And ");
#line hidden
#line 12
 testRunner.When(string.Format("contact has the following {0} to be deleted", email), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 13
 testRunner.Then(string.Format("contact with {0} is not viewable on the list", email), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
